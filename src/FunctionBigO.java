public class FunctionBigO {    // f(n)과 g(n)을 정의합니다.    public static double f(int n) {        return 3 * Math.pow(n, 2);  // 예: f(n) = 3n^2    }    public static double g(int n) {        return 5 * Math.pow(n, 2);  // 예: g(n) = 5n^2    }    // f(n) = O(g(n)) 관계를 확인하는 메서드    public static boolean isBigO(int n) {        double fn = f(n);        double gn = g(n);        return fn <= gn;  // f(n) <= g(n)이어야 O(g(n))이 성립    }    // g(n) = Ω(f(n)) 관계를 확인하는 메서드    public static boolean isOmega(int n) {        double fn = f(n);        double gn = g(n);        return gn >= fn;  // g(n) >= f(n)이어야 Ω(f(n))이 성립    }    public static void main(String[] args) {        for (int n = 1; n <= 10; n++) {            System.out.println("n = " + n);            if (isBigO(n)) {                System.out.println("f(n) = O(g(n)) 관계 성립");            } else {                System.out.println("f(n) = O(g(n)) 관계 성립하지 않음");            }            if (isOmega(n)) {                System.out.println("g(n) = Ω(f(n)) 관계 성립");            } else {                System.out.println("g(n) = Ω(f(n)) 관계 성립하지 않음");            }            System.out.println("------------------------");        }    }}